// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Owner Repository Initialization
   - Verify that the OwnerController is correctly initialized with the provided OwnerRepository.

2. Scenario: Null Owner Repository
   - Test the behavior when a null OwnerRepository is passed to the OwnerController.

3. Scenario: Owner Repository Methods Invocation
   - Check if the methods of the OwnerRepository are correctly called from the OwnerController.

4. Scenario: Pageable Object Creation
   - Verify the correct creation of Pageable objects within the OwnerController.

5. Scenario: Data Binding
   - Check the correct operation of data binding in the OwnerController by verifying if the WebDataBinder object is properly used.

6. Scenario: Path Variables Handling
   - Validate the correct handling and processing of path variables in the OwnerController.

7. Scenario: Request Parameters Handling
   - Validate the correct handling and processing of request parameters in the OwnerController.

8. Scenario: Model Attribute Usage
   - Verify if the ModelAttribute is correctly used and handled in the OwnerController.

9. Scenario: Handling Valid Annotations
   - Check if the OwnerController correctly handles the @Valid annotation for validating the model attributes.

10. Scenario: Handling GET and POST Requests
   - Validate if the OwnerController correctly handles GET and POST requests and returns the expected responses.

11. Scenario: ModelAndView Object Creation and Usage
   - Verify the correct creation and usage of ModelAndView objects in the OwnerController.

12. Scenario: Model Object Usage
   - Validate the correct usage of Model object in the OwnerController.

13. Scenario: Binding Result Handling
   - Check if the OwnerController correctly handles the BindingResult object after validation of model attributes.

Remember, these scenarios are based on the provided code snippet. You may need to adjust or add more scenarios depending on the full functionality of the OwnerController.
*/

// ********RoostGPT********
package org.springframework.samples.petclinic.owner;

import static org.junit.Assert.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class OwnerController_OwnerController_8b45ad788c_Test {

	@Mock
	private OwnerRepository owners;

	private OwnerController ownerController;

	@BeforeEach
	public void setup() {
		MockitoAnnotations.openMocks(this);
	}

	@Test
	public void testOwnerControllerInitialization() {
		ownerController = new OwnerController(owners);
		assertNotNull(ownerController);
	}

	@Test
	public void testOwnerControllerInitializationWithNull() {
		ownerController = new OwnerController(null);
		assertNotNull(ownerController);
	}

}
