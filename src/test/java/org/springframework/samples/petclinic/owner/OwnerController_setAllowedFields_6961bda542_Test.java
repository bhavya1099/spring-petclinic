// ********RoostGPT********
/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Verify that the setAllowedFields method is correctly disallowing the 'id' field from being bound in the WebDataBinder.
    - Steps: Call the setAllowedFields method with a WebDataBinder that has the 'id' field. After the method call, check if the 'id' field is disallowed.
    - Expected Result: The 'id' field should be disallowed in the WebDataBinder after calling the setAllowedFields method.

2. Test Scenario: Check if the method works properly when the WebDataBinder has already some disallowed fields.
    - Steps: Call the setAllowedFields method with a WebDataBinder that already has some disallowed fields. After the method call, check if the 'id' field is added to the disallowed fields.
    - Expected Result: The 'id' field should be added to the list of disallowed fields in the WebDataBinder. The previously disallowed fields should still be disallowed.

3. Test Scenario: Verify the functionality when the WebDataBinder is null.
    - Steps: Call the setAllowedFields method with a null WebDataBinder. Check if the method handles this case without throwing an exception.
    - Expected Result: The method should handle the null WebDataBinder gracefully, without throwing an exception.

4. Test Scenario: Check if the method works properly when the WebDataBinder has no fields at all.
    - Steps: Call the setAllowedFields method with a WebDataBinder that has no fields. After the method call, check if the 'id' field is disallowed.
    - Expected Result: The 'id' field should be disallowed in the WebDataBinder after calling the setAllowedFields method, even though the WebDataBinder had no fields initially.

5. Test Scenario: Verify the method with a WebDataBinder that has an 'id' field with different case (like 'ID' or 'Id').
    - Steps: Call the setAllowedFields method with a WebDataBinder that has an 'id' field written in different case. After the method call, check if the 'id' field is disallowed.
    - Expected Result: The 'id' field should not be disallowed in the WebDataBinder after calling the setAllowedFields method, because 'id' and 'ID' or 'Id' are different fields.
*/

// ********RoostGPT********
package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.validation.DataBinder;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
public class OwnerController_setAllowedFields_6961bda542_Test {

	private OwnerController ownerController;

	@BeforeEach
	void setup() {
		ownerController = new OwnerController(new OwnerRepository());
	}

	@Test
	void testSetAllowedFields_whenIdFieldExists() {
		DataBinder dataBinder = new DataBinder(new Object(), "id");
		ownerController.setAllowedFields(dataBinder);
		assertTrue(dataBinder.getDisallowedFields().contains("id"));
	}

	@Test
	void testSetAllowedFields_whenOtherDisallowedFieldsExist() {
		DataBinder dataBinder = new DataBinder(new Object(), "otherField");
		dataBinder.setDisallowedFields("otherField");
		ownerController.setAllowedFields(dataBinder);
		assertTrue(dataBinder.getDisallowedFields().contains("id"));
		assertTrue(dataBinder.getDisallowedFields().contains("otherField"));
	}

	@Test
	void testSetAllowedFields_whenDataBinderIsNull() {
		assertDoesNotThrow(() -> ownerController.setAllowedFields(null));
	}

	@Test
	void testSetAllowedFields_whenNoFieldsExist() {
		DataBinder dataBinder = new DataBinder(new Object());
		ownerController.setAllowedFields(dataBinder);
		assertTrue(dataBinder.getDisallowedFields().contains("id"));
	}

	@Test
	void testSetAllowedFields_whenIdFieldHasDifferentCase() {
		DataBinder dataBinder = new DataBinder(new Object(), "ID");
		ownerController.setAllowedFields(dataBinder);
		assertFalse(dataBinder.getDisallowedFields().contains("id"));
	}

}
